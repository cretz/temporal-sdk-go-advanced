// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: sqlitepb/sqlite.proto

package sqlitepb

import (
	_ "github.com/cretz/temporal-sdk-go-advanced/temporalproto/temporalpb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SqliteOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// If empty, considered a brand new database
	Serialized []byte `protobuf:"bytes,1,opt,name=serialized,proto3" json:"serialized,omitempty"`
	// Default is 5000
	RequestsUntilContinueAsNew uint32 `protobuf:"varint,2,opt,name=requests_until_continue_as_new,json=requestsUntilContinueAsNew,proto3" json:"requests_until_continue_as_new,omitempty"`
}

func (x *SqliteOptions) Reset() {
	*x = SqliteOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sqlitepb_sqlite_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SqliteOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SqliteOptions) ProtoMessage() {}

func (x *SqliteOptions) ProtoReflect() protoreflect.Message {
	mi := &file_sqlitepb_sqlite_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SqliteOptions.ProtoReflect.Descriptor instead.
func (*SqliteOptions) Descriptor() ([]byte, []int) {
	return file_sqlitepb_sqlite_proto_rawDescGZIP(), []int{0}
}

func (x *SqliteOptions) GetSerialized() []byte {
	if x != nil {
		return x.Serialized
	}
	return nil
}

func (x *SqliteOptions) GetRequestsUntilContinueAsNew() uint32 {
	if x != nil {
		return x.RequestsUntilContinueAsNew
	}
	return 0
}

type Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//	*Value_NullValue
	//	*Value_IntValue
	//	*Value_FloatValue
	//	*Value_StringValue
	//	*Value_BytesValue
	Value isValue_Value `protobuf_oneof:"value"`
}

func (x *Value) Reset() {
	*x = Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sqlitepb_sqlite_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Value) ProtoMessage() {}

func (x *Value) ProtoReflect() protoreflect.Message {
	mi := &file_sqlitepb_sqlite_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Value.ProtoReflect.Descriptor instead.
func (*Value) Descriptor() ([]byte, []int) {
	return file_sqlitepb_sqlite_proto_rawDescGZIP(), []int{1}
}

func (m *Value) GetValue() isValue_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *Value) GetNullValue() bool {
	if x, ok := x.GetValue().(*Value_NullValue); ok {
		return x.NullValue
	}
	return false
}

func (x *Value) GetIntValue() int64 {
	if x, ok := x.GetValue().(*Value_IntValue); ok {
		return x.IntValue
	}
	return 0
}

func (x *Value) GetFloatValue() float64 {
	if x, ok := x.GetValue().(*Value_FloatValue); ok {
		return x.FloatValue
	}
	return 0
}

func (x *Value) GetStringValue() string {
	if x, ok := x.GetValue().(*Value_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (x *Value) GetBytesValue() []byte {
	if x, ok := x.GetValue().(*Value_BytesValue); ok {
		return x.BytesValue
	}
	return nil
}

type isValue_Value interface {
	isValue_Value()
}

type Value_NullValue struct {
	NullValue bool `protobuf:"varint,1,opt,name=null_value,json=nullValue,proto3,oneof"`
}

type Value_IntValue struct {
	IntValue int64 `protobuf:"varint,2,opt,name=int_value,json=intValue,proto3,oneof"`
}

type Value_FloatValue struct {
	FloatValue float64 `protobuf:"fixed64,3,opt,name=float_value,json=floatValue,proto3,oneof"`
}

type Value_StringValue struct {
	StringValue string `protobuf:"bytes,4,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type Value_BytesValue struct {
	BytesValue []byte `protobuf:"bytes,5,opt,name=bytes_value,json=bytesValue,proto3,oneof"`
}

func (*Value_NullValue) isValue_Value() {}

func (*Value_IntValue) isValue_Value() {}

func (*Value_FloatValue) isValue_Value() {}

func (*Value_StringValue) isValue_Value() {}

func (*Value_BytesValue) isValue_Value() {}

type StmtRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Executed only until the first error
	Stmts []*Stmt `protobuf:"bytes,1,rep,name=stmts,proto3" json:"stmts,omitempty"`
}

func (x *StmtRequest) Reset() {
	*x = StmtRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sqlitepb_sqlite_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StmtRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StmtRequest) ProtoMessage() {}

func (x *StmtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sqlitepb_sqlite_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StmtRequest.ProtoReflect.Descriptor instead.
func (*StmtRequest) Descriptor() ([]byte, []int) {
	return file_sqlitepb_sqlite_proto_rawDescGZIP(), []int{2}
}

func (x *StmtRequest) GetStmts() []*Stmt {
	if x != nil {
		return x.Stmts
	}
	return nil
}

type Stmt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sql string `protobuf:"bytes,1,opt,name=sql,proto3" json:"sql,omitempty"`
	// Note: indexed parameters start at 1
	IndexedParams map[uint32]*Value `protobuf:"bytes,2,rep,name=indexed_params,json=indexedParams,proto3" json:"indexed_params,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	NamedParams   map[string]*Value `protobuf:"bytes,3,rep,name=named_params,json=namedParams,proto3" json:"named_params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// If this is true, the SQL can contain multiple statements but parameters are
	// not allowed
	MultiQuery bool `protobuf:"varint,4,opt,name=multi_query,json=multiQuery,proto3" json:"multi_query,omitempty"`
}

func (x *Stmt) Reset() {
	*x = Stmt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sqlitepb_sqlite_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stmt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stmt) ProtoMessage() {}

func (x *Stmt) ProtoReflect() protoreflect.Message {
	mi := &file_sqlitepb_sqlite_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stmt.ProtoReflect.Descriptor instead.
func (*Stmt) Descriptor() ([]byte, []int) {
	return file_sqlitepb_sqlite_proto_rawDescGZIP(), []int{3}
}

func (x *Stmt) GetSql() string {
	if x != nil {
		return x.Sql
	}
	return ""
}

func (x *Stmt) GetIndexedParams() map[uint32]*Value {
	if x != nil {
		return x.IndexedParams
	}
	return nil
}

func (x *Stmt) GetNamedParams() map[string]*Value {
	if x != nil {
		return x.NamedParams
	}
	return nil
}

func (x *Stmt) GetMultiQuery() bool {
	if x != nil {
		return x.MultiQuery
	}
	return false
}

type StmtResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Only up to the first error
	Results []*StmtResult `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *StmtResponse) Reset() {
	*x = StmtResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sqlitepb_sqlite_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StmtResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StmtResponse) ProtoMessage() {}

func (x *StmtResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sqlitepb_sqlite_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StmtResponse.ProtoReflect.Descriptor instead.
func (*StmtResponse) Descriptor() ([]byte, []int) {
	return file_sqlitepb_sqlite_proto_rawDescGZIP(), []int{4}
}

func (x *StmtResponse) GetResults() []*StmtResult {
	if x != nil {
		return x.Results
	}
	return nil
}

type StmtResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Successes []*StmtResult_Success `protobuf:"bytes,1,rep,name=successes,proto3" json:"successes,omitempty"`
	Error     *StmtResult_Error     `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *StmtResult) Reset() {
	*x = StmtResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sqlitepb_sqlite_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StmtResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StmtResult) ProtoMessage() {}

func (x *StmtResult) ProtoReflect() protoreflect.Message {
	mi := &file_sqlitepb_sqlite_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StmtResult.ProtoReflect.Descriptor instead.
func (*StmtResult) Descriptor() ([]byte, []int) {
	return file_sqlitepb_sqlite_proto_rawDescGZIP(), []int{5}
}

func (x *StmtResult) GetSuccesses() []*StmtResult_Success {
	if x != nil {
		return x.Successes
	}
	return nil
}

func (x *StmtResult) GetError() *StmtResult_Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type QueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request *StmtRequest `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *QueryRequest) Reset() {
	*x = QueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sqlitepb_sqlite_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRequest) ProtoMessage() {}

func (x *QueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sqlitepb_sqlite_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRequest.ProtoReflect.Descriptor instead.
func (*QueryRequest) Descriptor() ([]byte, []int) {
	return file_sqlitepb_sqlite_proto_rawDescGZIP(), []int{6}
}

func (x *QueryRequest) GetRequest() *StmtRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type QueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *StmtResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *QueryResponse) Reset() {
	*x = QueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sqlitepb_sqlite_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryResponse) ProtoMessage() {}

func (x *QueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sqlitepb_sqlite_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryResponse.ProtoReflect.Descriptor instead.
func (*QueryResponse) Descriptor() ([]byte, []int) {
	return file_sqlitepb_sqlite_proto_rawDescGZIP(), []int{7}
}

func (x *QueryResponse) GetResponse() *StmtResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type UpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request *StmtRequest `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *UpdateRequest) Reset() {
	*x = UpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sqlitepb_sqlite_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequest) ProtoMessage() {}

func (x *UpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sqlitepb_sqlite_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequest.ProtoReflect.Descriptor instead.
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return file_sqlitepb_sqlite_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateRequest) GetRequest() *StmtRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type ExecRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request            *StmtRequest `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	Id                 string       `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	ResponseTaskQueue  string       `protobuf:"bytes,3,opt,name=response_task_queue,json=responseTaskQueue,proto3" json:"response_task_queue,omitempty"`
	ResponseWorkflowId string       `protobuf:"bytes,4,opt,name=response_workflow_id,json=responseWorkflowId,proto3" json:"response_workflow_id,omitempty"`
}

func (x *ExecRequest) Reset() {
	*x = ExecRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sqlitepb_sqlite_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecRequest) ProtoMessage() {}

func (x *ExecRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sqlitepb_sqlite_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecRequest.ProtoReflect.Descriptor instead.
func (*ExecRequest) Descriptor() ([]byte, []int) {
	return file_sqlitepb_sqlite_proto_rawDescGZIP(), []int{9}
}

func (x *ExecRequest) GetRequest() *StmtRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *ExecRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ExecRequest) GetResponseTaskQueue() string {
	if x != nil {
		return x.ResponseTaskQueue
	}
	return ""
}

func (x *ExecRequest) GetResponseWorkflowId() string {
	if x != nil {
		return x.ResponseWorkflowId
	}
	return ""
}

type ExecResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *StmtResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Id       string        `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ExecResponse) Reset() {
	*x = ExecResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sqlitepb_sqlite_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecResponse) ProtoMessage() {}

func (x *ExecResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sqlitepb_sqlite_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecResponse.ProtoReflect.Descriptor instead.
func (*ExecResponse) Descriptor() ([]byte, []int) {
	return file_sqlitepb_sqlite_proto_rawDescGZIP(), []int{10}
}

func (x *ExecResponse) GetResponse() *StmtResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *ExecResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type SerializeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//	*SerializeResponse_Serialized
	//	*SerializeResponse_Error
	Result isSerializeResponse_Result `protobuf_oneof:"result"`
}

func (x *SerializeResponse) Reset() {
	*x = SerializeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sqlitepb_sqlite_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SerializeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerializeResponse) ProtoMessage() {}

func (x *SerializeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sqlitepb_sqlite_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SerializeResponse.ProtoReflect.Descriptor instead.
func (*SerializeResponse) Descriptor() ([]byte, []int) {
	return file_sqlitepb_sqlite_proto_rawDescGZIP(), []int{11}
}

func (m *SerializeResponse) GetResult() isSerializeResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *SerializeResponse) GetSerialized() []byte {
	if x, ok := x.GetResult().(*SerializeResponse_Serialized); ok {
		return x.Serialized
	}
	return nil
}

func (x *SerializeResponse) GetError() string {
	if x, ok := x.GetResult().(*SerializeResponse_Error); ok {
		return x.Error
	}
	return ""
}

type isSerializeResponse_Result interface {
	isSerializeResponse_Result()
}

type SerializeResponse_Serialized struct {
	Serialized []byte `protobuf:"bytes,1,opt,name=serialized,proto3,oneof"`
}

type SerializeResponse_Error struct {
	Error string `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*SerializeResponse_Serialized) isSerializeResponse_Result() {}

func (*SerializeResponse_Error) isSerializeResponse_Result() {}

type StmtResult_Success struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Columns []*StmtResult_Column `protobuf:"bytes,1,rep,name=columns,proto3" json:"columns,omitempty"`
	Rows    []*StmtResult_Row    `protobuf:"bytes,2,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *StmtResult_Success) Reset() {
	*x = StmtResult_Success{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sqlitepb_sqlite_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StmtResult_Success) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StmtResult_Success) ProtoMessage() {}

func (x *StmtResult_Success) ProtoReflect() protoreflect.Message {
	mi := &file_sqlitepb_sqlite_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StmtResult_Success.ProtoReflect.Descriptor instead.
func (*StmtResult_Success) Descriptor() ([]byte, []int) {
	return file_sqlitepb_sqlite_proto_rawDescGZIP(), []int{5, 0}
}

func (x *StmtResult_Success) GetColumns() []*StmtResult_Column {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *StmtResult_Success) GetRows() []*StmtResult_Row {
	if x != nil {
		return x.Rows
	}
	return nil
}

type StmtResult_Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *StmtResult_Error) Reset() {
	*x = StmtResult_Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sqlitepb_sqlite_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StmtResult_Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StmtResult_Error) ProtoMessage() {}

func (x *StmtResult_Error) ProtoReflect() protoreflect.Message {
	mi := &file_sqlitepb_sqlite_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StmtResult_Error.ProtoReflect.Descriptor instead.
func (*StmtResult_Error) Descriptor() ([]byte, []int) {
	return file_sqlitepb_sqlite_proto_rawDescGZIP(), []int{5, 1}
}

func (x *StmtResult_Error) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *StmtResult_Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type StmtResult_Column struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *StmtResult_Column) Reset() {
	*x = StmtResult_Column{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sqlitepb_sqlite_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StmtResult_Column) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StmtResult_Column) ProtoMessage() {}

func (x *StmtResult_Column) ProtoReflect() protoreflect.Message {
	mi := &file_sqlitepb_sqlite_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StmtResult_Column.ProtoReflect.Descriptor instead.
func (*StmtResult_Column) Descriptor() ([]byte, []int) {
	return file_sqlitepb_sqlite_proto_rawDescGZIP(), []int{5, 2}
}

func (x *StmtResult_Column) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type StmtResult_Row struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []*Value `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *StmtResult_Row) Reset() {
	*x = StmtResult_Row{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sqlitepb_sqlite_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StmtResult_Row) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StmtResult_Row) ProtoMessage() {}

func (x *StmtResult_Row) ProtoReflect() protoreflect.Message {
	mi := &file_sqlitepb_sqlite_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StmtResult_Row.ProtoReflect.Descriptor instead.
func (*StmtResult_Row) Descriptor() ([]byte, []int) {
	return file_sqlitepb_sqlite_proto_rawDescGZIP(), []int{5, 3}
}

func (x *StmtResult_Row) GetValues() []*Value {
	if x != nil {
		return x.Values
	}
	return nil
}

var File_sqlitepb_sqlite_proto protoreflect.FileDescriptor

var file_sqlitepb_sqlite_proto_rawDesc = []byte{
	0x0a, 0x15, 0x73, 0x71, 0x6c, 0x69, 0x74, 0x65, 0x70, 0x62, 0x2f, 0x73, 0x71, 0x6c, 0x69, 0x74,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61,
	0x6c, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x71, 0x6c, 0x69, 0x74, 0x65, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x74, 0x65, 0x6d, 0x70, 0x6f,
	0x72, 0x61, 0x6c, 0x70, 0x62, 0x2f, 0x73, 0x64, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x73, 0x0a, 0x0d, 0x53, 0x71, 0x6c, 0x69, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64,
	0x12, 0x42, 0x0a, 0x1e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x5f, 0x75, 0x6e, 0x74,
	0x69, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x5f, 0x61, 0x73, 0x5f, 0x6e,
	0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x41,
	0x73, 0x4e, 0x65, 0x77, 0x22, 0xbb, 0x01, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1f,
	0x0a, 0x0a, 0x6e, 0x75, 0x6c, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x48, 0x00, 0x52, 0x09, 0x6e, 0x75, 0x6c, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x1d, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x00, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21,
	0x0a, 0x0b, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x01, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x23, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x0b, 0x62, 0x79, 0x74, 0x65, 0x73, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0a, 0x62,
	0x79, 0x74, 0x65, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x3e, 0x0a, 0x0b, 0x53, 0x74, 0x6d, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2f, 0x0a, 0x05, 0x73, 0x74, 0x6d, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x73, 0x71, 0x6c, 0x69, 0x74, 0x65, 0x2e, 0x53, 0x74, 0x6d, 0x74, 0x52, 0x05, 0x73, 0x74, 0x6d,
	0x74, 0x73, 0x22, 0x97, 0x03, 0x0a, 0x04, 0x53, 0x74, 0x6d, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x73,
	0x71, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x71, 0x6c, 0x12, 0x53, 0x0a,
	0x0e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x71, 0x6c, 0x69, 0x74, 0x65, 0x2e, 0x53, 0x74, 0x6d, 0x74,
	0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x64, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x4d, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6f,
	0x72, 0x61, 0x6c, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x71, 0x6c, 0x69, 0x74, 0x65, 0x2e, 0x53,
	0x74, 0x6d, 0x74, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x1a, 0x5c, 0x0a, 0x12, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x64, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x65, 0x6d, 0x70,
	0x6f, 0x72, 0x61, 0x6c, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x71, 0x6c, 0x69, 0x74, 0x65, 0x2e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x1a, 0x5a, 0x0a, 0x10, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x71, 0x6c, 0x69, 0x74, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x49, 0x0a, 0x0c,
	0x53, 0x74, 0x6d, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x07,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x71, 0x6c,
	0x69, 0x74, 0x65, 0x2e, 0x53, 0x74, 0x6d, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0xa7, 0x03, 0x0a, 0x0a, 0x53, 0x74, 0x6d, 0x74,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x45, 0x0a, 0x09, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x74, 0x65, 0x6d, 0x70,
	0x6f, 0x72, 0x61, 0x6c, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x71, 0x6c, 0x69, 0x74, 0x65, 0x2e,
	0x53, 0x74, 0x6d, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x52, 0x09, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x3b, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x74,
	0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x71, 0x6c, 0x69,
	0x74, 0x65, 0x2e, 0x53, 0x74, 0x6d, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x84, 0x01, 0x0a, 0x07, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x40, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72,
	0x61, 0x6c, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x71, 0x6c, 0x69, 0x74, 0x65, 0x2e, 0x53, 0x74,
	0x6d, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52,
	0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x37, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61,
	0x6c, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x71, 0x6c, 0x69, 0x74, 0x65, 0x2e, 0x53, 0x74, 0x6d,
	0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x52, 0x6f, 0x77, 0x52, 0x04, 0x72, 0x6f, 0x77,
	0x73, 0x1a, 0x35, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1c, 0x0a, 0x06, 0x43, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x39, 0x0a, 0x03, 0x52, 0x6f, 0x77, 0x12, 0x32, 0x0a,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x71, 0x6c,
	0x69, 0x74, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x22, 0x4a, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x3a, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x73, 0x71, 0x6c, 0x69, 0x74, 0x65, 0x2e, 0x53, 0x74, 0x6d, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4e, 0x0a,
	0x0d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x73, 0x71, 0x6c, 0x69, 0x74, 0x65, 0x2e, 0x53, 0x74, 0x6d, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4b, 0x0a,
	0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a,
	0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73,
	0x71, 0x6c, 0x69, 0x74, 0x65, 0x2e, 0x53, 0x74, 0x6d, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xbb, 0x01, 0x0a, 0x0b, 0x45,
	0x78, 0x65, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x07, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x74, 0x65,
	0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x71, 0x6c, 0x69, 0x74,
	0x65, 0x2e, 0x53, 0x74, 0x6d, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x57, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x22, 0x5d, 0x0a, 0x0c, 0x45, 0x78, 0x65, 0x63,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x74, 0x65, 0x6d,
	0x70, 0x6f, 0x72, 0x61, 0x6c, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x71, 0x6c, 0x69, 0x74, 0x65,
	0x2e, 0x53, 0x74, 0x6d, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x57, 0x0a, 0x11, 0x53, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0a,
	0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x48, 0x00, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x16,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x32, 0xc4, 0x03, 0x0a, 0x06, 0x53, 0x71, 0x6c, 0x69, 0x74, 0x65, 0x12, 0x72, 0x0a, 0x06, 0x53,
	0x71, 0x6c, 0x69, 0x74, 0x65, 0x12, 0x22, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x71, 0x6c, 0x69, 0x74, 0x65, 0x2e, 0x53, 0x71, 0x6c, 0x69,
	0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x2c, 0x8a, 0xc4, 0x03, 0x28, 0x0a, 0x07, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x0a, 0x0b, 0x0a, 0x09, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x12, 0x08, 0x0a,
	0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x1a, 0x06, 0x0a, 0x04, 0x45, 0x78, 0x65, 0x63, 0x12,
	0x54, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x21, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6f,
	0x72, 0x61, 0x6c, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x71, 0x6c, 0x69, 0x74, 0x65, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x74, 0x65,
	0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x71, 0x6c, 0x69, 0x74,
	0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x04, 0x9a, 0xc4, 0x03, 0x00, 0x12, 0x4a, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x22, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73,
	0x71, 0x6c, 0x69, 0x74, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x04, 0xa2, 0xc4, 0x03,
	0x00, 0x12, 0x51, 0x0a, 0x04, 0x45, 0x78, 0x65, 0x63, 0x12, 0x20, 0x2e, 0x74, 0x65, 0x6d, 0x70,
	0x6f, 0x72, 0x61, 0x6c, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x71, 0x6c, 0x69, 0x74, 0x65, 0x2e,
	0x45, 0x78, 0x65, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x74, 0x65,
	0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x71, 0x6c, 0x69, 0x74,
	0x65, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x04,
	0xaa, 0xc4, 0x03, 0x00, 0x12, 0x51, 0x0a, 0x09, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a,
	0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x26, 0x2e, 0x74, 0x65, 0x6d, 0x70,
	0x6f, 0x72, 0x61, 0x6c, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x73, 0x71, 0x6c, 0x69, 0x74, 0x65, 0x2e,
	0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x04, 0x9a, 0xc4, 0x03, 0x00, 0x42, 0x43, 0x5a, 0x41, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x72, 0x65, 0x74, 0x7a, 0x2f, 0x74, 0x65, 0x6d, 0x70,
	0x6f, 0x72, 0x61, 0x6c, 0x2d, 0x73, 0x64, 0x6b, 0x2d, 0x67, 0x6f, 0x2d, 0x61, 0x64, 0x76, 0x61,
	0x6e, 0x63, 0x65, 0x64, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c, 0x73, 0x71, 0x6c,
	0x69, 0x74, 0x65, 0x2f, 0x73, 0x71, 0x6c, 0x69, 0x74, 0x65, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sqlitepb_sqlite_proto_rawDescOnce sync.Once
	file_sqlitepb_sqlite_proto_rawDescData = file_sqlitepb_sqlite_proto_rawDesc
)

func file_sqlitepb_sqlite_proto_rawDescGZIP() []byte {
	file_sqlitepb_sqlite_proto_rawDescOnce.Do(func() {
		file_sqlitepb_sqlite_proto_rawDescData = protoimpl.X.CompressGZIP(file_sqlitepb_sqlite_proto_rawDescData)
	})
	return file_sqlitepb_sqlite_proto_rawDescData
}

var file_sqlitepb_sqlite_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_sqlitepb_sqlite_proto_goTypes = []interface{}{
	(*SqliteOptions)(nil),      // 0: temporal.sdk.sqlite.SqliteOptions
	(*Value)(nil),              // 1: temporal.sdk.sqlite.Value
	(*StmtRequest)(nil),        // 2: temporal.sdk.sqlite.StmtRequest
	(*Stmt)(nil),               // 3: temporal.sdk.sqlite.Stmt
	(*StmtResponse)(nil),       // 4: temporal.sdk.sqlite.StmtResponse
	(*StmtResult)(nil),         // 5: temporal.sdk.sqlite.StmtResult
	(*QueryRequest)(nil),       // 6: temporal.sdk.sqlite.QueryRequest
	(*QueryResponse)(nil),      // 7: temporal.sdk.sqlite.QueryResponse
	(*UpdateRequest)(nil),      // 8: temporal.sdk.sqlite.UpdateRequest
	(*ExecRequest)(nil),        // 9: temporal.sdk.sqlite.ExecRequest
	(*ExecResponse)(nil),       // 10: temporal.sdk.sqlite.ExecResponse
	(*SerializeResponse)(nil),  // 11: temporal.sdk.sqlite.SerializeResponse
	nil,                        // 12: temporal.sdk.sqlite.Stmt.IndexedParamsEntry
	nil,                        // 13: temporal.sdk.sqlite.Stmt.NamedParamsEntry
	(*StmtResult_Success)(nil), // 14: temporal.sdk.sqlite.StmtResult.Success
	(*StmtResult_Error)(nil),   // 15: temporal.sdk.sqlite.StmtResult.Error
	(*StmtResult_Column)(nil),  // 16: temporal.sdk.sqlite.StmtResult.Column
	(*StmtResult_Row)(nil),     // 17: temporal.sdk.sqlite.StmtResult.Row
	(*emptypb.Empty)(nil),      // 18: google.protobuf.Empty
}
var file_sqlitepb_sqlite_proto_depIdxs = []int32{
	3,  // 0: temporal.sdk.sqlite.StmtRequest.stmts:type_name -> temporal.sdk.sqlite.Stmt
	12, // 1: temporal.sdk.sqlite.Stmt.indexed_params:type_name -> temporal.sdk.sqlite.Stmt.IndexedParamsEntry
	13, // 2: temporal.sdk.sqlite.Stmt.named_params:type_name -> temporal.sdk.sqlite.Stmt.NamedParamsEntry
	5,  // 3: temporal.sdk.sqlite.StmtResponse.results:type_name -> temporal.sdk.sqlite.StmtResult
	14, // 4: temporal.sdk.sqlite.StmtResult.successes:type_name -> temporal.sdk.sqlite.StmtResult.Success
	15, // 5: temporal.sdk.sqlite.StmtResult.error:type_name -> temporal.sdk.sqlite.StmtResult.Error
	2,  // 6: temporal.sdk.sqlite.QueryRequest.request:type_name -> temporal.sdk.sqlite.StmtRequest
	4,  // 7: temporal.sdk.sqlite.QueryResponse.response:type_name -> temporal.sdk.sqlite.StmtResponse
	2,  // 8: temporal.sdk.sqlite.UpdateRequest.request:type_name -> temporal.sdk.sqlite.StmtRequest
	2,  // 9: temporal.sdk.sqlite.ExecRequest.request:type_name -> temporal.sdk.sqlite.StmtRequest
	4,  // 10: temporal.sdk.sqlite.ExecResponse.response:type_name -> temporal.sdk.sqlite.StmtResponse
	1,  // 11: temporal.sdk.sqlite.Stmt.IndexedParamsEntry.value:type_name -> temporal.sdk.sqlite.Value
	1,  // 12: temporal.sdk.sqlite.Stmt.NamedParamsEntry.value:type_name -> temporal.sdk.sqlite.Value
	16, // 13: temporal.sdk.sqlite.StmtResult.Success.columns:type_name -> temporal.sdk.sqlite.StmtResult.Column
	17, // 14: temporal.sdk.sqlite.StmtResult.Success.rows:type_name -> temporal.sdk.sqlite.StmtResult.Row
	1,  // 15: temporal.sdk.sqlite.StmtResult.Row.values:type_name -> temporal.sdk.sqlite.Value
	0,  // 16: temporal.sdk.sqlite.Sqlite.Sqlite:input_type -> temporal.sdk.sqlite.SqliteOptions
	6,  // 17: temporal.sdk.sqlite.Sqlite.Query:input_type -> temporal.sdk.sqlite.QueryRequest
	8,  // 18: temporal.sdk.sqlite.Sqlite.Update:input_type -> temporal.sdk.sqlite.UpdateRequest
	9,  // 19: temporal.sdk.sqlite.Sqlite.Exec:input_type -> temporal.sdk.sqlite.ExecRequest
	18, // 20: temporal.sdk.sqlite.Sqlite.Serialize:input_type -> google.protobuf.Empty
	18, // 21: temporal.sdk.sqlite.Sqlite.Sqlite:output_type -> google.protobuf.Empty
	7,  // 22: temporal.sdk.sqlite.Sqlite.Query:output_type -> temporal.sdk.sqlite.QueryResponse
	18, // 23: temporal.sdk.sqlite.Sqlite.Update:output_type -> google.protobuf.Empty
	10, // 24: temporal.sdk.sqlite.Sqlite.Exec:output_type -> temporal.sdk.sqlite.ExecResponse
	11, // 25: temporal.sdk.sqlite.Sqlite.Serialize:output_type -> temporal.sdk.sqlite.SerializeResponse
	21, // [21:26] is the sub-list for method output_type
	16, // [16:21] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_sqlitepb_sqlite_proto_init() }
func file_sqlitepb_sqlite_proto_init() {
	if File_sqlitepb_sqlite_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sqlitepb_sqlite_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SqliteOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sqlitepb_sqlite_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sqlitepb_sqlite_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StmtRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sqlitepb_sqlite_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stmt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sqlitepb_sqlite_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StmtResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sqlitepb_sqlite_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StmtResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sqlitepb_sqlite_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sqlitepb_sqlite_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sqlitepb_sqlite_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sqlitepb_sqlite_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sqlitepb_sqlite_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sqlitepb_sqlite_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SerializeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sqlitepb_sqlite_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StmtResult_Success); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sqlitepb_sqlite_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StmtResult_Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sqlitepb_sqlite_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StmtResult_Column); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sqlitepb_sqlite_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StmtResult_Row); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_sqlitepb_sqlite_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Value_NullValue)(nil),
		(*Value_IntValue)(nil),
		(*Value_FloatValue)(nil),
		(*Value_StringValue)(nil),
		(*Value_BytesValue)(nil),
	}
	file_sqlitepb_sqlite_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*SerializeResponse_Serialized)(nil),
		(*SerializeResponse_Error)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sqlitepb_sqlite_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sqlitepb_sqlite_proto_goTypes,
		DependencyIndexes: file_sqlitepb_sqlite_proto_depIdxs,
		MessageInfos:      file_sqlitepb_sqlite_proto_msgTypes,
	}.Build()
	File_sqlitepb_sqlite_proto = out.File
	file_sqlitepb_sqlite_proto_rawDesc = nil
	file_sqlitepb_sqlite_proto_goTypes = nil
	file_sqlitepb_sqlite_proto_depIdxs = nil
}
